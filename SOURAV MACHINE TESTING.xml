<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="NISHANT MACHINE 2.xml" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="address" type="required" numBits="12" relativity="absolute" signed="true" defaultValue="0" id="model.Field738ea33a">
	</Field>
	<Field name="opcode" type="required" numBits="4" relativity="absolute" signed="true" defaultValue="0" id="model.Field288afb3b">
	</Field>
	<Field name="operation" type="required" numBits="16" relativity="absolute" signed="true" defaultValue="0" id="model.Field7f51dd5b">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" initialValue="0" readOnly="false" id="model.module.Register5ffc1692" />
	<Register name="AR" width="12" initialValue="0" readOnly="false" id="model.module.Register596de924" />
	<Register name="DR" width="16" initialValue="0" readOnly="false" id="model.module.Register26418211" />
	<Register name="E" width="1" initialValue="0" readOnly="false" id="model.module.Register578b2887" />
	<Register name="FGI" width="1" initialValue="0" readOnly="false" id="model.module.Register68fcfc62" />
	<Register name="FGO" width="1" initialValue="0" readOnly="false" id="model.module.Register5e6e0c90" />
	<Register name="I" width="1" initialValue="0" readOnly="false" id="model.module.Register74955c46" />
	<Register name="INPR" width="8" initialValue="0" readOnly="false" id="model.module.Register7ad49d43" />
	<Register name="IR" width="16" initialValue="0" readOnly="false" id="model.module.Register75c46197" />
	<Register name="OUTR" width="8" initialValue="0" readOnly="false" id="model.module.Register5c9f965" />
	<Register name="PC" width="12" initialValue="0" readOnly="false" id="model.module.Register5b29421a" />
	<Register name="S" width="1" initialValue="0" readOnly="false" id="model.module.Registerdb74831" />
	<Register name="TR" width="16" initialValue="0" readOnly="false" id="model.module.Register514281c5" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="HALT" bit="0" register="model.module.Registerdb74831" halt="true" id="model.module.ConditionBit1b0a4859" />

	<!--............. rams ..........................-->
	<RAM name="Main" length="4096" cellSize="16" id="model.module.RAMaa2f0b0" />

	<!--............. set ...........................-->
	<Set name="ac &lt;- 0" register="model.module.Register5ffc1692" start="0" numBits="16" value="0" id="model.microinstruction.CpusimSet316bf211" />
	<Set name="e &lt;- 0" register="model.module.Register578b2887" start="0" numBits="1" value="0" id="model.microinstruction.CpusimSet2c51a3fc" />

	<!--............. test ..........................-->
	<Test name="if (ac !=0)" register="model.module.Register5ffc1692" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Testf29920c" />
	<Test name="if (ac (15) !=0)" register="model.module.Register5ffc1692" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test2644dab1" />
	<Test name="if (ac (15) !=1)" register="model.module.Register5ffc1692" start="0" numBits="1" comparison="NE" value="1" omission="1" id="model.microinstruction.Test48d14f12" />
	<Test name="if (dr !=0)" register="model.module.Register26418211" start="0" numBits="16" comparison="NE" value="0" omission="1" id="model.microinstruction.Test693e5bb7" />
	<Test name="if (e !=0)" register="model.module.Register578b2887" start="0" numBits="1" comparison="NE" value="0" omission="1" id="model.microinstruction.Test2ac41d6e" />

	<!--............. increment .....................-->
	<Increment name="ac &lt;- ac + 1" register="model.module.Register5ffc1692" overflowBit="model.module.ConditionBit1b0a4859" delta="1" id="model.microinstruction.Increment2ad5dbd5" />
	<Increment name="ar &lt;- ar + 1" register="model.module.Register596de924" overflowBit="model.module.ConditionBit1b0a4859" delta="1" id="model.microinstruction.Increment683eb842" />
	<Increment name="dr &lt;- dr + 1" register="model.module.Register26418211" overflowBit="model.module.ConditionBit1b0a4859" delta="1" id="model.microinstruction.Increment7346a511" />
	<Increment name="pc &lt;- pc + 1" register="model.module.Register5b29421a" overflowBit="model.module.ConditionBit1b0a4859" delta="1" id="model.microinstruction.Increment7963e97a" />

	<!--............. shift .........................-->
	<Shift name="ac &lt;- shl ac" type="cyclic" source="model.module.Register5ffc1692" destination="model.module.Register5ffc1692" direction="left" distance="1" id="model.microinstruction.Shift26a58a9a" />
	<Shift name="ac &lt;- shr ac" type="cyclic" source="model.module.Register5ffc1692" destination="model.module.Register5ffc1692" direction="right" distance="1" id="model.microinstruction.Shift40eb9f0d" />

	<!--............. logical .......................-->
	<Logical name="ac &lt;- ac ^ dr" type="AND" source1="model.module.Register5ffc1692" source2="model.module.Register26418211" destination="model.module.Register5ffc1692" id="model.microinstruction.Logical5d3c6521" />
	<Logical name="ac &lt;- ac'" type="NOT" source1="model.module.Register5ffc1692" source2="model.module.Register5ffc1692" destination="model.module.Register5ffc1692" id="model.microinstruction.Logical41338a7c" />
	<Logical name="e &lt;- e'" type="NOT" source1="model.module.Register578b2887" source2="model.module.Register578b2887" destination="model.module.Register578b2887" id="model.microinstruction.Logical50dc9e46" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="ac &lt;- ac + dr" type="ADD" source1="model.module.Register5ffc1692" source2="model.module.Register26418211" destination="model.module.Register5ffc1692" id="model.microinstruction.Arithmetic39527f48" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="ac (0) &lt;- e" source="model.module.Register578b2887" srcStartBit="0" dest="model.module.Register5ffc1692" destStartBit="15" numBits="1" id="model.microinstruction.TransferRtoR7f9002e" />
	<TransferRtoR name="ac &lt;- dr" source="model.module.Register26418211" srcStartBit="0" dest="model.module.Register5ffc1692" destStartBit="0" numBits="16" id="model.microinstruction.TransferRtoR5a441ac7" />
	<TransferRtoR name="ac(15) &lt;- e" source="model.module.Register578b2887" srcStartBit="0" dest="model.module.Register5ffc1692" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR6ede9167" />
	<TransferRtoR name="ar &lt;- ir (0-11)" source="model.module.Register75c46197" srcStartBit="4" dest="model.module.Register596de924" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR44dc1bcb" />
	<TransferRtoR name="ar &lt;- pc" source="model.module.Register5b29421a" srcStartBit="0" dest="model.module.Register596de924" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoRb6b9b0e" />
	<TransferRtoR name="e &lt;- ac (0)" source="model.module.Register5ffc1692" srcStartBit="15" dest="model.module.Register578b2887" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR71832a86" />
	<TransferRtoR name="e &lt;- ac (15)" source="model.module.Register5ffc1692" srcStartBit="0" dest="model.module.Register578b2887" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR6bccd878" />
	<TransferRtoR name="i &lt;- ir (15)" source="model.module.Register75c46197" srcStartBit="0" dest="model.module.Register74955c46" destStartBit="0" numBits="1" id="model.microinstruction.TransferRtoR4f6a9489" />
	<TransferRtoR name="pc &lt;- ar" source="model.module.Register596de924" srcStartBit="0" dest="model.module.Register5b29421a" destStartBit="0" numBits="12" id="model.microinstruction.TransferRtoR70310b0c" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="decode ir" ir="model.module.Register75c46197" id="model.microinstruction.Decode7d33026a" />

	<!--............. set condition bit .............-->
	<SetCondBit name="halt &lt;- 1" bit="model.module.ConditionBit1b0a4859" value="1" id="model.microinstruction.SetCondBit66660f99" />

	<!--............. io ............................-->
	<IO name="input" direction="input" type="integer" buffer="model.module.Register5ffc1692" connection="[Console]" id="model.microinstruction.IO8aafc09" />
	<IO name="output" direction="output" type="integer" buffer="model.module.Register5ffc1692" connection="[Console]" id="model.microinstruction.IO70bbef7b" />

	<!--............. memory access .................-->
	<MemoryAccess name="ar &lt;- m[ar]" direction="read" memory="model.module.RAMaa2f0b0" data="model.module.Register596de924" address="model.module.Register596de924" id="model.microinstruction.MemoryAccess15fe8354" />
	<MemoryAccess name="dr &lt;- m[ar]" direction="read" memory="model.module.RAMaa2f0b0" data="model.module.Register26418211" address="model.module.Register596de924" id="model.microinstruction.MemoryAccess43b24cb5" />
	<MemoryAccess name="ir &lt;- m[ar]" direction="read" memory="model.module.RAMaa2f0b0" data="model.module.Register75c46197" address="model.module.Register596de924" id="model.microinstruction.MemoryAccess1c27aa7e" />
	<MemoryAccess name="m[ar] &lt;- ac" direction="write" memory="model.module.RAMaa2f0b0" data="model.module.Register5ffc1692" address="model.module.Register596de924" id="model.microinstruction.MemoryAccess33c85eb6" />
	<MemoryAccess name="m[ar] &lt;- dr" direction="write" memory="model.module.RAMaa2f0b0" data="model.module.Register26418211" address="model.module.Register596de924" id="model.microinstruction.MemoryAccess524d9fb8" />
	<MemoryAccess name="m[ar] &lt;- pc" direction="write" memory="model.module.RAMaa2f0b0" data="model.module.Register5b29421a" address="model.module.Register596de924" id="model.microinstruction.MemoryAccess3cba6a0" />

	<!--............. end ...........................-->
	<End id="model.microinstruction.End229e88fd" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="model.microinstruction.TransferRtoRb6b9b0e" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess1c27aa7e" />
		<Microinstruction microRef="model.microinstruction.Increment7963e97a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR4f6a9489" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR44dc1bcb" />
		<Microinstruction microRef="model.microinstruction.Decode7d33026a" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="out" opcode="f400" instructionFormat="operation" assemblyFormat="operation" instructionColors="#9ce7f5" assemblyColors="#9ce7f5" >
		<Microinstruction microRef="model.microinstruction.IO70bbef7b" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="inp" opcode="f800" instructionFormat="operation" assemblyFormat="operation" instructionColors="#deb8c7" assemblyColors="#deb8c7" >
		<Microinstruction microRef="model.microinstruction.IO8aafc09" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="isz_i" opcode="e" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#d9ebd4 #df9fbb" assemblyColors="#d9ebd4 #df9fbb" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess15fe8354" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess43b24cb5" />
		<Microinstruction microRef="model.microinstruction.Increment7346a511" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess524d9fb8" />
		<Microinstruction microRef="model.microinstruction.Test693e5bb7" />
		<Microinstruction microRef="model.microinstruction.Increment7963e97a" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="isz" opcode="6" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#c0ced4 #bdfa9c" assemblyColors="#c0ced4 #bdfa9c" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess43b24cb5" />
		<Microinstruction microRef="model.microinstruction.Increment7346a511" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess524d9fb8" />
		<Microinstruction microRef="model.microinstruction.Test693e5bb7" />
		<Microinstruction microRef="model.microinstruction.Increment7963e97a" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="bsa_i" opcode="d" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#fcc093 #c78fb7" assemblyColors="#fcc093 #c78fb7" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess15fe8354" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess3cba6a0" />
		<Microinstruction microRef="model.microinstruction.Increment683eb842" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR70310b0c" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="bsa" opcode="5" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#baa783 #8bd1f8" assemblyColors="#baa783 #8bd1f8" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess3cba6a0" />
		<Microinstruction microRef="model.microinstruction.Increment683eb842" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR70310b0c" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="bun_i" opcode="c" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#ad9ba4 #a28cd0" assemblyColors="#ad9ba4 #a28cd0" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess15fe8354" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR70310b0c" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="bun" opcode="4" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#c6e9e1 #a6c2de" assemblyColors="#c6e9e1 #a6c2de" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR70310b0c" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="sta_i" opcode="b" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#f7d590 #c4bc84" assemblyColors="#f7d590 #c4bc84" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess15fe8354" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess33c85eb6" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="sta" opcode="3" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#86e4ef #ebc9ee" assemblyColors="#86e4ef #ebc9ee" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess33c85eb6" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="lda_i" opcode="a" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#bc8095 #cba8e1" assemblyColors="#bc8095 #cba8e1" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess15fe8354" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess43b24cb5" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5a441ac7" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="lda" opcode="2" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#a28dd1 #c3cfb3" assemblyColors="#a28dd1 #c3cfb3" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess43b24cb5" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR5a441ac7" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="add_i" opcode="9" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#c4eeb6 #eae59b" assemblyColors="#c4eeb6 #eae59b" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess15fe8354" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess43b24cb5" />
		<Microinstruction microRef="model.microinstruction.Arithmetic39527f48" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="add" opcode="1" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#91dfc3 #b685bc" assemblyColors="#91dfc3 #b685bc" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess43b24cb5" />
		<Microinstruction microRef="model.microinstruction.Arithmetic39527f48" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="and_i" opcode="8" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#8ebed0 #b7f496" assemblyColors="#8ebed0 #b7f496" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess15fe8354" />
		<Microinstruction microRef="model.microinstruction.MemoryAccess43b24cb5" />
		<Microinstruction microRef="model.microinstruction.Logical5d3c6521" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="and" opcode="0" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#cccfd8 #879dab" assemblyColors="#cccfd8 #879dab" >
		<Microinstruction microRef="model.microinstruction.MemoryAccess43b24cb5" />
		<Microinstruction microRef="model.microinstruction.Logical5d3c6521" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="hlt" opcode="1b59" instructionFormat="operation" assemblyFormat="operation" instructionColors="#cf97ef" assemblyColors="#cf97ef" >
		<Microinstruction microRef="model.microinstruction.SetCondBit66660f99" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="sze" opcode="1b5a" instructionFormat="operation" assemblyFormat="operation" instructionColors="#a3dca7" assemblyColors="#a3dca7" >
		<Microinstruction microRef="model.microinstruction.Test2ac41d6e" />
		<Microinstruction microRef="model.microinstruction.Increment7963e97a" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="sza" opcode="1b5c" instructionFormat="operation" assemblyFormat="operation" instructionColors="#f4bb90" assemblyColors="#f4bb90" >
		<Microinstruction microRef="model.microinstruction.Testf29920c" />
		<Microinstruction microRef="model.microinstruction.Increment7963e97a" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="sna" opcode="1b60" instructionFormat="operation" assemblyFormat="operation" instructionColors="#e680db" assemblyColors="#e680db" >
		<Microinstruction microRef="model.microinstruction.Test48d14f12" />
		<Microinstruction microRef="model.microinstruction.Increment7963e97a" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="spa" opcode="1b62" instructionFormat="operation" assemblyFormat="operation" instructionColors="#8ec4e5" assemblyColors="#8ec4e5" >
		<Microinstruction microRef="model.microinstruction.Test2644dab1" />
		<Microinstruction microRef="model.microinstruction.Increment7963e97a" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="inc" opcode="1b6c" instructionFormat="operation" assemblyFormat="operation" instructionColors="#c897dd" assemblyColors="#c897dd" >
		<Microinstruction microRef="model.microinstruction.Increment2ad5dbd5" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="cil" opcode="1b80" instructionFormat="operation" assemblyFormat="operation" instructionColors="#bda7e8" assemblyColors="#bda7e8" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR6bccd878" />
		<Microinstruction microRef="model.microinstruction.Shift26a58a9a" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR7f9002e" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="cir" opcode="1ba8" instructionFormat="operation" assemblyFormat="operation" instructionColors="#e9f3cc" assemblyColors="#e9f3cc" >
		<Microinstruction microRef="model.microinstruction.TransferRtoR71832a86" />
		<Microinstruction microRef="model.microinstruction.Shift40eb9f0d" />
		<Microinstruction microRef="model.microinstruction.TransferRtoR6ede9167" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="cme" opcode="1bbc" instructionFormat="operation" assemblyFormat="operation" instructionColors="#a4b7f7" assemblyColors="#a4b7f7" >
		<Microinstruction microRef="model.microinstruction.Logical50dc9e46" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="cma" opcode="1c20" instructionFormat="operation" assemblyFormat="operation" instructionColors="#dcf2d1" assemblyColors="#dcf2d1" >
		<Microinstruction microRef="model.microinstruction.Logical41338a7c" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="cle" opcode="1ce8" instructionFormat="operation" assemblyFormat="operation" instructionColors="#ab9d80" assemblyColors="#ab9d80" >
		<Microinstruction microRef="model.microinstruction.CpusimSet2c51a3fc" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<MachineInstruction name="cla" opcode="1e78" instructionFormat="operation" assemblyFormat="operation" instructionColors="#c294f5" assemblyColors="#c294f5" >
		<Microinstruction microRef="model.microinstruction.CpusimSet316bf211" />
		<Microinstruction microRef="model.microinstruction.End229e88fd" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAMaa2f0b0" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="false" />

	<!--............. program counter info ..................-->

</Machine>
