<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED offset CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED format CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="PRACTICE MACHINE 2" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="ADDRESS" type="required" numBits="12" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field472695e3">
	</Field>
	<Field name="OPCODE" type="required" numBits="4" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field1b911875">
	</Field>
	<Field name="OPERATION" type="required" numBits="16" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field3ce44816">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" id="module.Register783d91c7" />
	<Register name="AR" width="12" id="module.Registerbc78aae" />
	<Register name="DR" width="16" id="module.Register18067913" />
	<Register name="E" width="1" id="module.Register6bc26fd" />
	<Register name="I" width="1" id="module.Register121b3c44" />
	<Register name="INPR" width="8" id="module.Register253e5653" />
	<Register name="IR" width="16" id="module.Registeredb6d06" />
	<Register name="OUTR" width="8" id="module.Register69b739ee" />
	<Register name="PC" width="12" id="module.Register2285d180" />
	<Register name="S" width="1" id="module.Register755e874d" />
	<Register name="TR" width="16" id="module.Register20b877bd" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY-BIT" bit="0" register="module.Register6bc26fd" halt="false" id="module.ConditionBit7010520d" />
	<ConditionBit name="HALT-BIT" bit="0" register="module.Register755e874d" halt="true" id="module.ConditionBit7c95845e" />

	<!--............. rams ..........................-->
	<RAM name="MAIN" length="4096" cellSize="16" id="module.RAM7df0106e" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<!-- none -->

	<!--............. increment .....................-->
	<Increment name="INCRIMENT-AC" register="module.Register783d91c7" delta="1" id="microinstruction.Increment1e9695f2" />
	<Increment name="INCRIMENT-PC" register="module.Register2285d180" delta="1" id="microinstruction.Increment6ce43c17" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<Logical name="AC&lt;- AC NOR" type="NOR" source1="module.Register783d91c7" source2="module.Register18067913" destination="module.Register783d91c7" id="microinstruction.Logical3c03f2a1" />
	<Logical name="AC&lt;-AC NAND" type="NAND" source1="module.Register783d91c7" source2="module.Register18067913" destination="module.Register783d91c7" id="microinstruction.Logical410de62f" />
	<Logical name="AC&lt;-AC OR DR" type="OR" source1="module.Register783d91c7" source2="module.Register18067913" destination="module.Register783d91c7" id="microinstruction.Logical6b1ed2f9" />
	<Logical name="AC&lt;-AC'" type="NOT" source1="module.Register783d91c7" source2="module.Register783d91c7" destination="module.Register783d91c7" id="microinstruction.Logical5e23798" />
	<Logical name="AC&lt;-AC^DR" type="AND" source1="module.Register783d91c7" source2="module.Register18067913" destination="module.Register783d91c7" id="microinstruction.Logical2bf09595" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="AC&lt;-AC+DR" type="ADD" source1="module.Register783d91c7" source2="module.Register18067913" destination="module.Register783d91c7" carryBit="module.ConditionBit7010520d" id="microinstruction.Arithmetic36e40308" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AR&lt;-IR[4-15]" source="module.Registeredb6d06" srcStartBit="4" dest="module.Registerbc78aae" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR3e9d01ff" />
	<TransferRtoR name="AR&lt;-PC" source="module.Register2285d180" srcStartBit="0" dest="module.Registerbc78aae" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR116e6784" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE-IR" ir="module.Registeredb6d06" id="microinstruction.Decode704cae2" />

	<!--............. set condition bit .............-->
	<SetCondBit name="HALT&lt;-1" bit="module.ConditionBit7c95845e" value="1" id="microinstruction.SetCondBit102a8e35" />

	<!--............. io ............................-->
	<IO name="INPUT" direction="input" type="integer" buffer="module.Register783d91c7" connection="[console]" id="microinstruction.IO466ef736" />
	<IO name="OUTPUT" direction="output" type="integer" buffer="module.Register783d91c7" connection="[console]" id="microinstruction.IO24deea38" />

	<!--............. memory access .................-->
	<MemoryAccess name="DR&lt;-MAIN[AR]" direction="read" memory="module.RAM7df0106e" data="module.Register18067913" address="module.Registerbc78aae" id="microinstruction.MemoryAccess5ac779b" />
	<MemoryAccess name="IR&lt;-MAIN[AR]" direction="read" memory="module.RAM7df0106e" data="module.Registeredb6d06" address="module.Registerbc78aae" id="microinstruction.MemoryAccess41331a3d" />
	<MemoryAccess name="MAIN[AR]&lt;-AC" direction="write" memory="module.RAM7df0106e" data="module.Register783d91c7" address="module.Registerbc78aae" id="microinstruction.MemoryAccess70d5826a" />

	<!--............. end ...........................-->
	<End id="microinstruction.End23092962" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="microinstruction.TransferRtoR116e6784" />
		<Microinstruction microRef="microinstruction.MemoryAccess41331a3d" />
		<Microinstruction microRef="microinstruction.Increment6ce43c17" />
		<Microinstruction microRef="microinstruction.TransferRtoR3e9d01ff" />
		<Microinstruction microRef="microinstruction.Decode704cae2" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="NAND" opcode="b" format="OPCODE ADDRESS" >
		<Microinstruction microRef="microinstruction.MemoryAccess5ac779b" />
		<Microinstruction microRef="microinstruction.Logical410de62f" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="NOR" opcode="a" format="OPCODE ADDRESS" >
		<Microinstruction microRef="microinstruction.MemoryAccess5ac779b" />
		<Microinstruction microRef="microinstruction.Logical3c03f2a1" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="NOT" opcode="9" format="OPCODE ADDRESS" >
		<Microinstruction microRef="microinstruction.MemoryAccess5ac779b" />
		<Microinstruction microRef="microinstruction.Logical5e23798" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="OR" opcode="8" format="OPCODE ADDRESS" >
		<Microinstruction microRef="microinstruction.MemoryAccess5ac779b" />
		<Microinstruction microRef="microinstruction.Logical6b1ed2f9" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="AND" opcode="7" format="OPCODE ADDRESS" >
		<Microinstruction microRef="microinstruction.MemoryAccess5ac779b" />
		<Microinstruction microRef="microinstruction.Logical2bf09595" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="6" format="OPERATION" >
		<Microinstruction microRef="microinstruction.Logical5e23798" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="INC" opcode="5" format="OPERATION" >
		<Microinstruction microRef="microinstruction.Increment1e9695f2" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="HLT" opcode="4" format="OPERATION" >
		<Microinstruction microRef="microinstruction.SetCondBit102a8e35" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="OUT" opcode="3" format="OPERATION" >
		<Microinstruction microRef="microinstruction.IO24deea38" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="ADD" opcode="2" format="OPCODE ADDRESS" >
		<Microinstruction microRef="microinstruction.MemoryAccess5ac779b" />
		<Microinstruction microRef="microinstruction.Arithmetic36e40308" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="STA" opcode="1" format="OPCODE ADDRESS" >
		<Microinstruction microRef="microinstruction.MemoryAccess70d5826a" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<MachineInstruction name="INP" opcode="0" format="OPERATION" >
		<Microinstruction microRef="microinstruction.IO466ef736" />
		<Microinstruction microRef="microinstruction.End23092962" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="module.RAM7df0106e" startingAddress="0" />

	<!--............. module window info ............-->
	<ModuleWindowsInfo>
	</ModuleWindowsInfo>

</Machine>
